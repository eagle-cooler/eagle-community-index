name: Verify Plugin Repository

on:
  workflow_dispatch:
    inputs:
      repository:
        description: 'Repository to verify (format: owner/repo)'
        required: true
        type: string
        default: 'eagle-cooler/eagle-webdav'
  
  workflow_call:
    inputs:
      repository:
        description: 'Repository to verify (format: owner/repo)'
        required: true
        type: string

jobs:
  verify-plugin:
    runs-on: ubuntu-latest
    
    outputs:
      verification-status: ${{ steps.verify.outputs.status }}
      verification-output: ${{ steps.verify.outputs.output }}
      verification-success: ${{ steps.verify.outputs.success }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Validate repository format
        id: validate
        run: |
          REPO="${{ inputs.repository }}"
          if [[ ! "$REPO" =~ ^[a-zA-Z0-9_.-]+/[a-zA-Z0-9_.-]+$ ]]; then
            echo "ERROR: Invalid repository format. Expected 'owner/repo', got '$REPO'"
            exit 1
          fi
          echo "Repository format is valid: $REPO"
      
      - name: Run verification script
        id: verify
        run: |
          echo "Verifying repository: ${{ inputs.repository }}"
          
          # Capture both output and exit code
          set +e  # Don't exit on error
          OUTPUT=$(python scripts/repo-verify-correctness.py "${{ inputs.repository }}" 2>&1)
          EXIT_CODE=$?
          set -e  # Re-enable exit on error
          
          # Store outputs
          echo "status=$EXIT_CODE" >> $GITHUB_OUTPUT
          echo "success=$([ $EXIT_CODE -eq 0 ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
          
          # Handle multiline output for GitHub Actions
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "output<<$EOF" >> $GITHUB_OUTPUT
          echo "$OUTPUT" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
          
          # Print results for workflow logs
          echo "=== Verification Results ==="
          echo "$OUTPUT"
          echo "=== Exit Code: $EXIT_CODE ==="
          
          # Exit with the same code as the verification script
          exit $EXIT_CODE
      
      - name: Create verification summary
        if: always()
        run: |
          echo "## Plugin Verification Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Repository:** \`${{ inputs.repository }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Status:** ${{ steps.verify.outputs.success == 'true' && '✅ PASSED' || '❌ FAILED' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Exit Code:** ${{ steps.verify.outputs.status }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Detailed Output" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.verify.outputs.output }}" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
      
      - name: Upload verification results as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: verification-results-${{ github.run_id }}
          path: |
            scripts/repo-verify-correctness.py
          retention-days: 30
      
      - name: Create results file
        if: always()
        run: |
          cat > verification-results.json << EOF
          {
            "repository": "${{ inputs.repository }}",
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "success": ${{ steps.verify.outputs.success }},
            "exit_code": ${{ steps.verify.outputs.status }},
            "output": $(echo '${{ steps.verify.outputs.output }}' | jq -Rs .),
            "workflow_run_id": "${{ github.run_id }}",
            "workflow_run_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }
          EOF
      
      - name: Upload results JSON
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: verification-results-json-${{ github.run_id }}
          path: verification-results.json
          retention-days: 30

  # Optional: Add a notification job for failed verifications
  notify-failure:
    runs-on: ubuntu-latest
    needs: verify-plugin
    if: failure() && needs.verify-plugin.outputs.verification-success == 'false'
    
    steps:
      - name: Repository verification failed
        run: |
          echo "::error title=Plugin Verification Failed::Repository ${{ inputs.repository }} failed verification checks"
          echo "Verification output:"
          echo "${{ needs.verify-plugin.outputs.verification-output }}"
